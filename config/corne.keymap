/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt LEFT_COMMAND TAB  &kp Q  &kp W  &kp E  &kp R      &kp T        &kp Y           &kp U      &kp I      &kp O       &kp P     &mt RIGHT_COMMAND BACKSLASH
&kp ESCAPE            &kp A  &kp S  &kp D  &kp F      &kp G        &kp H           &kp J      &kp K      &kp L       &kp SEMI  &kp SQT
&kp RET               &kp Z  &kp X  &kp C  &kp V      &kp B        &kp N           &kp M      &kp COMMA  &kp PERIOD  &kp FSLH  &kp BACKSPACE
                                    &mo 1  &kp SPACE  &kp LCTRL    &kp LEFT_SHIFT  &kp SPACE  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1           &kp N2          &kp N3     &kp N4            &kp N5               &kp N6          &kp N7           &kp N8         &kp N9                &kp N0                 &kp BACKSLASH
&trans  &kp EXCLAMATION  &kp AT_SIGN     &kp HASH   &kp DOLLAR        &kp PERCENT          &kp CARET       &kp AMPERSAND    &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE
&trans  &kp BACKSLASH    &kp UNDERSCORE  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LESS_THAN  &kp GREATER_THAN      &kp MINUS              &trans
                                         &trans     &trans            &trans               &trans          &trans           &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans                    &trans             &trans           &trans      &trans    &trans          &trans          &trans        &trans           &trans  &trans
&trans  &kp LC(LG(LS(NUMBER_4)))  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans                    &trans             &trans           &trans      &trans    &trans          &kp C_NEXT      &kp C_PREV    &trans           &trans  &trans
                                                     &trans           &trans      &trans    &trans          &trans          &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};

